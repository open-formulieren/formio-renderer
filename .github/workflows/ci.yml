name: Run CI build and tests

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
      - main
      - stable/*
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    name: Serve storybook and run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: yarn

      - name: Build Storybook docs
        run: |
          yarn install
          npx playwright install --with-deps
          yarn build-storybook --quiet

      - name: Serve storybook and run tests
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "npx http-server storybook-static --port 6006 --quiet" \
            "npx wait-on -l http://127.0.0.1:6006 && npm test"

  build:
    name: Create 'production' build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Build library
        run: yarn build

      - name: Store build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist/
          retention-days: 1

  prettier:
    name: Check frontend code formatting with prettier
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Run prettier linter
        run: yarn checkformat

  publish:
    name: Publish the NPM package
    runs-on: ubuntu-latest
    needs:
      - build-and-test
      - prettier

    # do not publish in forks or non-tag pushes
    if: startsWith(github.ref, 'refs/tags/') && github.repository_owner == 'open-formulieren'

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: yarn
          registry-url: 'https://registry.npmjs.org'
          scope: '@open-formulieren'

      - name: Install dependencies
        run: yarn

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist/

      - name: Publish package to NPM
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          yarn publish --access public --new-version=$VERSION
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
